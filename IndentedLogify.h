//
//  IndentedLogify.h
//
//  Created by Jonathan Bailey on 22/09/2012.
//  
//

#import <Foundation/Foundation.h>

static int indentLevel = 0; //Don't modify manually, this is used by the macros below.
static BOOL logSBM = NO; //Logging will only occur when this = YES (don't set directly use macros below)

#define INDENTEDLOGPATH @"/tmp/tracelog.txt" //Location on the device the log will be saved.

//use the following two macros to start and end logging, usually hook a method, and place these around the call to the original method.
#define START_INDENTED_LOGGING(identifier) indentLevel = 0; logSBM = YES;[NSString appendString:@"START: "#identifier"\n" toFileAtPath:INDENTEDLOGPATH];
#define END_INDENTED_LOGGING(identifier) logSBM = NO;[NSString appendString:@"END: "#identifier"\n\n" toFileAtPath:INDENTEDLOGPATH];

//These are used by the code generated by the script.
#define INCR_INDENTLEVEL indentLevel++;
#define DECR_INDENTLEVEL indentLevel--;
#define IndentedLog if (logSBM) { [NSString appendString:[[NSString stringWithFormat:@"[%@ %@]\n", NSStringFromClass([self class]), NSStringFromSelector(_cmd)] indentString] toFileAtPath:INDENTEDLOGPATH]; }

@interface NSString (StacktraceLog)
+(void)appendString:(NSString *)str toFileAtPath:(NSString *)path;
-(NSString *)indentString;
@end
